name: Deploy to Production
run-name: Deploy to Production by @${{ github.actor }}
on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout
jobs:
  check-assume-role:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.CICD_ASSUME_ROLE_ARN }}
          role-session-name: ${{ github.actor }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Check caller identity
        run: aws sts get-caller-identity
  terraform-plan:
    needs: [check-assume-role]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.CICD_ASSUME_ROLE_ARN }}
          role-session-name: ${{ github.actor }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.6.0
      - name: Terraform Init
        run: |
          cd terraform
          terraform init
      - name: Terraform Plan
        id: plan
        run: |
          cd terraform
          terraform plan -out=tfplan
        env:
          TF_VAR_allowed_cidrs_string: ${{ secrets.allowed_cidrs }}
      - name: Save Plan
        uses: actions/upload-artifact@v3
        with:
          name: tfplan
          path: terraform/tfplan
  terraform-apply-main:
    if: github.ref == 'refs/heads/main'
    needs: [terraform-plan]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.CICD_ASSUME_ROLE_ARN }}
          role-session-name: ${{ github.actor }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Download Plan
        uses: actions/download-artifact@v2
        with:
          name: tfplan
      - name: Terraform Apply
        run: |
          cd terraform
          terraform apply -auto-approve tfplan
        env:
          TF_VAR_allowed_cidrs_string: ${{ secrets.allowed_cidrs }}
  terraform-apply-dev:
    if: github.ref != 'refs/heads/main'
    needs: [terraform-plan]
    environment:
      name: prod
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.CICD_ASSUME_ROLE_ARN }}
          role-session-name: ${{ github.actor }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Download Plan
        uses: actions/download-artifact@v2
        with:
          name: tfplan
      - name: Terraform Apply
        run: |
          cd terraform
          terraform apply -auto-approve tfplan
        env:
          TF_VAR_allowed_cidrs_string: ${{ secrets.allowed_cidrs }}
